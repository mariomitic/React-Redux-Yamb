
import { ROLL_DICE, KEEP_DICE1, RETURN_DICE1, KEEP_DICE2, RETURN_DICE2, KEEP_DICE3, RETURN_DICE3,
         KEEP_DICE4, RETURN_DICE4, KEEP_DICE5, RETURN_DICE5, KEEP_DICE6, RETURN_DICE6,
         CALC_ONE_DOWN, CALC_ONE_FREE, CALC_ONE_UP, CALC_ONE_CALL, CALC_ONE_HAND,
         CALC_TWO_DOWN, CALC_TWO_FREE, CALC_TWO_UP, CALC_TWO_CALL, CALC_TWO_HAND, 
         CALC_THREE_DOWN, CALC_THREE_FREE, CALC_THREE_UP, CALC_THREE_CALL, CALC_THREE_HAND,
         CALC_FOUR_DOWN, CALC_FOUR_FREE, CALC_FOUR_UP, CALC_FOUR_CALL, CALC_FOUR_HAND, 
         CALC_FIVE_DOWN, CALC_FIVE_FREE, CALC_FIVE_UP, CALC_FIVE_CALL, CALC_FIVE_HAND,
         CALC_SIX_DOWN, CALC_SIX_FREE, CALC_SIX_UP, CALC_SIX_CALL, CALC_SIX_HAND,
         CALC_MAX_DOWN, CALC_MAX_FREE, CALC_MAX_UP, CALC_MAX_CALL, CALC_MAX_HAND,
         CALC_MIN_DOWN, CALC_MIN_FREE, CALC_MIN_UP, CALC_MIN_CALL, CALC_MIN_HAND,
         CALC_THREE_OF_A_KIND_DOWN, CALC_THREE_OF_A_KIND_FREE, CALC_THREE_OF_A_KIND_UP, CALC_THREE_OF_A_KIND_CALL, CALC_THREE_OF_A_KIND_HAND,
         CALC_SCALE_DOWN, CALC_SCALE_FREE, CALC_SCALE_UP, CALC_SCALE_CALL, CALC_SCALE_HAND,
         CALC_FULL_DOWN, CALC_FULL_FREE, CALC_FULL_UP, CALC_FULL_CALL, CALC_FULL_HAND,
         CALC_POKER_DOWN, CALC_POKER_FREE, CALC_POKER_UP, CALC_POKER_CALL, CALC_POKER_HAND,
         CALC_YAMB_DOWN, CALC_YAMB_FREE, CALC_YAMB_UP, CALC_YAMB_CALL, CALC_YAMB_HAND,
         CLOSE_ALERT, DISPLAY_RULES} from "./dicesTypes";



const initialState = {
    
    dice1: '',
    dice1mute: true,
    dice2: '',
    dice2mute: true,
    dice3: '',
    dice3mute: true,
    dice4: '',
    dice4mute: true,
    dice5: '',
    dice5mute: true,
    dice6: '',
    dice6mute: true,

    keep1: '',
    keep1mute: true,
    keep2: '',
    keep2mute: true,
    keep3: '',
    keep3mute: true,
    keep4: '',
    keep4mute: true,
    keep5: '',
    keep5mute: true,
    keep6: '',
    keep6mute: true,

    clickCounter: 0,
    throwBtnMute: false,
    
    oneDown: '',
    oneDownPermanentlyMute: false,
    oneFree: '',
    oneFreePermanentlyMute: false,
    oneUp: '',
    oneUpPermanentlyMute: true,
    oneCall: '',
    oneCallPermanentlyMute: false,
    oneCalledCell: false,
    calledCellId: '',
    oneHand: '',
    oneHandPermanentlyMute: false,
    
    twoDown: '',
    twoDownPermanentlyMute: true,
    twoDownTemporarilyMute: false,
    twoFree: '',
    twoFreePermanentlyMute: false,
    twoFreeTemporarilyMute: false,
    twoUp: '',
    twoUpPermanentlyMute: true,
    twoUpTemporarilyMute: false,
    twoCall: '',
    twoCallPermanentlyMute: false,
    twoCallTemporarilyMute: false,
    twoHand: '',
    twoHandPermanentlyMute: false,
    twoHandTemporarilyMute: false,

    threeDown: '',
    threeDownPermanentlyMute: true,
    fourDownTemporarilyMute: false,
    threeFree: '',
    threeFreePermanentlyMute: false,
    threeFreeTemporarilyMute: false,
    threeUp: '',
    threeUpPermanentlyMute: true,
    threeUpTemporarilyMute: false,
    threeCall: '',
    threeCallPermanentlyMute: false,
    threeCallTemporarilyMute: false,
    threeHand: '',
    threeHandPermanentlyMute: false,
    threeHandTemporarilyMute: false,

    fourDown: '',
    fourDownPermanentlyMute: true,
    fourFree: '',
    fourFreePermanentlyMute: false,
    fourUp: '',
    fourUpPermanentlyMute: true,
    fourCall: '',
    fourCallPermanentlyMute: false,
    fourHand: '',
    fourHandPermanentlyMute: false,

    fiveDown: '',
    fiveDownPermanentlyMute: true,
    fiveDownTemporarilyMute: false,
    fiveFree: '',
    fiveFreePermanentlyMute: false,
    fiveFreeTemporarilyMute: false,
    fiveUp: '',
    fiveUpPermanentlyMute: true,
    fiveUpTemporarilyMute: false,
    fiveCall: '',
    fiveCallPermanentlyMute: false,
    fiveCallTemporarilyMute: false,
    fiveHand: '',
    fiveHandPermanentlyMute: false,
    fiveHandTemporarilyMute: false,

    sixDown: '',
    sixDownPermanentlyMute: true,
    sixDownTemporarilyMute: false,
    sixFree: '',
    sixFreePermanentlyMute: false,
    sixFreeTemporarilyMute: false,
    sixUp: '',
    sixUpPermanentlyMute: true,
    sixUpTemporarilyMute: false,
    sixCall: '',
    sixCallPermanentlyMute: false,
    sixCallTemporarilyMute: false,
    sixHand: '',
    sixHandPermanentlyMute: false,
    sixHandTemporarilyMute: false,

    maxDown: '',
    maxDownPermanentlyMute: true,
    maxDownTemporarilyMute: false,
    maxFree: '',
    maxFreePermanentlyMute: false,
    maxFreeTemporarilyMute: false,
    maxUp: '',
    maxUpPermanentlyMute: true,
    maxUpTemporarilyMute: false,
    maxCall: '',
    maxCallPermanentlyMute: false,
    maxCallTemporarilyMute: false,
    maxHand: '',
    maxHandPermanentlyMute: false,
    maxHandTemporarilyMute: false,

    mustUseFiveDices: false,

    minDown: '',
    minDownPermanentlyMute: true,
    minDownTemporarilyMute: false,
    minFree: '',
    minFreePermanentlyMute: false,
    minFreeTemporarilyMute: false,
    minUp: '',
    minUpPermanentlyMute: true,
    minUpTemporarilyMute: false,
    minCall: '',
    minCallPermanentlyMute: false,
    minCallTemporarilyMute: false,
    minHand: '',
    minHandPermanentlyMute: false,
    minHandTemporarilyMute: false,

    ThreeOfAKindDown: '',
    ThreeOfAKindDownPermanentlyMute: true,
    ThreeOfAKindDownTemporarilyMute: false,
    ThreeOfAKindFree: '',
    ThreeOfAKindFreePermanentlyMute: false,
    ThreeOfAKindFreeTemporarilyMute: false,
    ThreeOfAKindUp: '',
    ThreeOfAKindUpPermanentlyMute: true,
    ThreeOfAKindUpTemporarilyMute: false,
    ThreeOfAKindCall: '',
    ThreeOfAKindCallPermanentlyMute: false,
    ThreeOfAKindCallTemporarilyMute: false,
    ThreeOfAKindHand: '',
    ThreeOfAKindHandPermanentlyMute: false,
    ThreeOfAKindhandTemporarilyMute: false,

    scaleDown: '',
    scaleDownPermanentlyMute: true,
    scaleDownTemporarilyMute: false,
    scaleFree: '',
    scaleFreePermanentlyMute: false,
    scaleFreeTemporarilyMute: false,
    scaleUp: '',
    scaleUpPermanentlyMute: true,
    scaleUpTemporarilyMute: false,
    scaleCall: '',
    scaleCallPermanentlyMute: false,
    scaleCallTemporarilyMute: false,
    scaleHand: '',
    scaleHandPermanentlyMute: false,
    scaleHandTemporarilyMute: false,

    fullDown: '',
    fullDownPermanentlyMute: true,
    fullDownTemporarilyMute: false,
    fullFree: '',
    fullFreePermanentlyMute: false,
    fullFreeTemporarilyMute: false,
    fullUp: '',
    fullUpPermanentlyMute: true,
    fullUpTemporarilyMute: false,
    fullCall: '',
    fullCallPermanentlyMute: false,
    fullCallTemporarilyMute: false,
    fullHand: '',
    fullHandPermanentlyMute: false,
    fullHandTemporarilyMute: false,

    pokerDown: '',
    pokerDownPermanentlyMute: true,
    pokerDownTemporarilyMute: false,
    pokerFree: '',
    pokerFreePermanentlyMute: false,
    pokerFreeTemporarilyMute: false,
    pokerUp: '',
    pokerUpPermanentlyMute: true,
    pokerUpTemporarilyMute: false,
    pokerCall: '',
    pokerCallPermanentlyMute: false,
    pokerCallTemporarilyMute: false,
    pokerHand: '',
    pokerHandPermanentlyMute: false,
    pokerHandTemporarilyMute: false,

    yambDown: '',
    yambDownPermanentlyMute: true,
    yambDownTemporarilyMute: false,
    yambFree: '',
    yambFreePermanentlyMute: false,
    yambFreeTemporarilyMute: false,
    yambUp: '',
    yambUpPermanentlyMute: false,
    yambUpTemporarilyMute: false,
    yambCall: '',
    yambCallPermanentlyMute: false,
    yambCallTemporarilyMute: false,
    yambHand: '',
    yambHandPermanentlyMute: false,
    yambHandTemporarilyMute: false,

    displayRules: false,
    

    numberFieldsLeftDownFreeUp: 39,
    numberFieldsLeftCallHand: 26,

}

const dicesReducer = (state = initialState, action) => {
     switch(action.type){
        case ROLL_DICE: if(state.clickCounter === 0)
        return {
            ...state,
            dice1: Math.floor(Math.random() * 6 + 1),
            dice1mute: false,
            dice2: Math.floor(Math.random() * 6 + 1),
            dice2mute: false,
            dice3: Math.floor(Math.random() * 6 + 1),
            dice3mute: false,
            dice4: Math.floor(Math.random() * 6 + 1),
            dice4mute: false,
            dice5: Math.floor(Math.random() * 6 + 1),
            dice5mute: false,
            dice6: Math.floor(Math.random() * 6 + 1),
            dice6mute: false,
            clickCounter: state.clickCounter + 1,
            mustUseFiveDices: false,
            
            
        } ;
           
        if(state.clickCounter === 1) return{
            ...state,
            dice1: state.dice1 === '' ? state.dice1 : Math.floor(Math.random() * 6 + 1),
            dice2: state.dice2 === '' ? state.dice2 : Math.floor(Math.random() * 6 + 1),
            dice3: state.dice3 === '' ? state.dice3 : Math.floor(Math.random() * 6 + 1),
            dice4: state.dice4 === '' ? state.dice4 : Math.floor(Math.random() * 6 + 1),
            dice5: state.dice5 === '' ? state.dice5 : Math.floor(Math.random() * 6 + 1),
            dice6: state.dice6 === '' ? state.dice6 : Math.floor(Math.random() * 6 + 1),
            mustUseFiveDices: false,
            clickCounter: state.clickCounter + 1,
            
        
        } ;
        if(state.clickCounter === 2) return{
            ...state,
            dice1: state.dice1 === '' ? state.dice1 : Math.floor(Math.random() * 6 + 1),
            dice2: state.dice2 === '' ? state.dice2 : Math.floor(Math.random() * 6 + 1),
            dice3: state.dice3 === '' ? state.dice3 : Math.floor(Math.random() * 6 + 1),
            dice4: state.dice4 === '' ? state.dice4 : Math.floor(Math.random() * 6 + 1),
            dice5: state.dice5 === '' ? state.dice5 : Math.floor(Math.random() * 6 + 1),
            dice6: state.dice6 === '' ? state.dice6 : Math.floor(Math.random() * 6 + 1),
            clickCounter: state.clickCounter + 1,
            mustUseFiveDices: false,
            throwBtnMute: true,
            
        };
        break;
        case KEEP_DICE1: return {
            ...state,
            keep1: state.dice1,
            keep1mute: false,
            dice1: '',
            dice1mute: true,
                     
        };
        case RETURN_DICE1 : return {
            ...state,
            keep1: '',
            keep1mute: true,
            dice1: state.keep1,
            dice1mute: false,
            
        };

        case KEEP_DICE2: return {
            ...state,
            keep2: state.dice2,
            keep2mute: false,
            dice2: '',
            dice2mute: true,
                        
        };
        case RETURN_DICE2 : return {
            ...state,
            keep2: '',
            keep2mute: true,
            dice2: state.keep2,
            dice2mute: false,
          
        };
        
        case KEEP_DICE3: return {
            ...state,
            keep3: state.dice3,
            keep3mute: false,
            dice3: '',
            dice3mute: true,
            
        };
        case RETURN_DICE3 : return {
            ...state,
            keep3: '',
            keep3mute: true,
            dice3: state.keep3,
            dice3mute: false,
           
        };

        case KEEP_DICE4: return {
            ...state,
            keep4: state.dice4,
            keep4mute: false,
            dice4: '',
            dice4mute: true,
           
        };
        case RETURN_DICE4 : return {
            ...state,
            keep4: '',
            keep4mute: true,
            dice4: state.keep4,
            dice4mute: false,
            
        };

        case KEEP_DICE5: return {
            ...state,
            keep5: state.dice5,
            keep5mute: false,
            dice5: '',
            dice5mute: true,
           
        };
        case RETURN_DICE5 : return {
            ...state,
            keep5: '',
            keep5mute: true,
            dice5: state.keep5,
            dice5mute: false,
            
        };

        case KEEP_DICE6: return {
            ...state,
            keep6: state.dice6,
            keep6mute: false,
            dice6: '',
            dice6mute: true,
           
        };
        case RETURN_DICE6 : return {
            ...state,
            keep6: '',
            keep6mute: true,
            dice6: state.keep6,
            dice6mute: false,
            
        };
       
        case CALC_ONE_DOWN: return {
            ...state,
            oneDown: state.clickCounter === 0 ? null : action.payload,
            oneDownPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            twoDownPermanentlyMute: false, 
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,
             
        };

        case CALC_ONE_FREE:  return {
            ...state,
            oneFree: state.clickCounter === 0 ? null : action.payload,
            oneFreePermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,       
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0, 
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,  
        };

        case CALC_ONE_UP:  return {
            ...state,
            oneUp: state.clickCounter === 0 ? null : action.payload,
            oneUpPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,  
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1, 
        };

        case CALC_ONE_CALL:  return {
            ...state,
            oneCall: state.clickCounter === 0 ? null : action.payload,
            oneCallPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,  
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1, 
        };

        case CALC_ONE_HAND:  return {
            ...state,
            oneHand: state.clickCounter === 0 ? null : action.payload,
            oneHandPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,  
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1, 
        };



        case CALC_TWO_DOWN: return {
            ...state,
            twoDown: state.clickCounter === 0 ? null : action.payload,
            twoDownPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            threeDownPermanentlyMute: false, 
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,
 
        };

        case CALC_TWO_FREE:  return {
            ...state,
            twoFree: state.clickCounter === 0 ? null : action.payload,
            twoFreePermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,   
        };

        case CALC_TWO_UP:  return {
            ...state,
            twoUp: state.clickCounter === 0 ? null : action.payload,
            twoUpPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            oneUpPermanentlyMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,  
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1, 
        };

        case CALC_TWO_CALL:  return {
            ...state,
            twoCall: state.clickCounter === 0 ? null : action.payload,
            twoCallPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0, 
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1,   
        };

        case CALC_TWO_HAND:  return {
            ...state,
            twoHand: state.clickCounter === 0 ? null : action.payload,
            twoHandPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,  
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1, 
        };

        case CALC_THREE_DOWN: return {
            ...state,
            threeDown: state.clickCounter === 0 ? null : action.payload,
            threeDownPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            fourDownPermanentlyMute: false, 
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,
 
        };

        case CALC_THREE_FREE:  return {
            ...state,
            threeFree: state.clickCounter === 0 ? null : action.payload,
            threeFreePermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0, 
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,  
        };

        case CALC_THREE_UP:  return {
            ...state,
            threeUp: state.clickCounter === 0 ? null : action.payload,
            threeUpPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            twoUpPermanentlyMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0, 
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,  
        };

        case CALC_THREE_CALL:  return {
            ...state,
            threeCall: state.clickCounter === 0 ? null : action.payload,
            threeCallPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0, 
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1,   
        };

        case CALC_THREE_HAND:  return {
            ...state,
            threeHand: state.clickCounter === 0 ? null : action.payload,
            threeHandPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0, 
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1,  
        };

        case CALC_FOUR_DOWN: return {
            ...state,
            fourDown: state.clickCounter === 0 ? null : action.payload,
            fourDownPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            fiveDownPermanentlyMute: false, 
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,
 
        };

        case CALC_FOUR_FREE:  return {
            ...state,
            fourFree: state.clickCounter === 0 ? null : action.payload,
            fourFreePermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0, 
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,  
        };

        case CALC_FOUR_UP:  return {
            ...state,
            fourUp: state.clickCounter === 0 ? null : action.payload,
            fourUpPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            threeUpPermanentlyMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0, 
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,  
        };

        case CALC_FOUR_CALL:  return {
            ...state,
            fourCall: state.clickCounter === 0 ? null : action.payload,
            fourCallPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0, 
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1,   
        };

        case CALC_FOUR_HAND:  return {
            ...state,
            fourHand: state.clickCounter === 0 ? null : action.payload,
            fourHandPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0, 
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1,  
        };

        case CALC_FIVE_DOWN: return {
            ...state,
            fiveDown: state.clickCounter === 0 ? null : action.payload,
            fiveDownPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            sixDownPermanentlyMute: false, 
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,
 
        };

        case CALC_FIVE_FREE:  return {
            ...state,
            fiveFree: state.clickCounter === 0 ? null : action.payload,
            fiveFreePermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,   
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,
        };

        case CALC_FIVE_UP:  return {
            ...state,
            fiveUp: state.clickCounter === 0 ? null : action.payload,
            fiveUpPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            fourUpPermanentlyMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0, 
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,  
        };

        case CALC_FIVE_CALL:  return {
            ...state,
            fiveCall: state.clickCounter === 0 ? null : action.payload,
            fiveCallPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0, 
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1,   
        };

        case CALC_FIVE_HAND:  return {
            ...state,
            fiveHand: state.clickCounter === 0 ? null : action.payload,
            fiveHandPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1,   
        };

        case CALC_SIX_DOWN: return {
            ...state,
            sixDown: state.clickCounter === 0 ? null : action.payload,
            sixDownPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            maxDownPermanentlyMute: false, 
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,
 
        };

        case CALC_SIX_FREE:  return {
            ...state,
            sixFree: state.clickCounter === 0 ? null : action.payload,
            sixFreePermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,   
        };

        case CALC_SIX_UP:  return {
            ...state,
            sixUp: state.clickCounter === 0 ? null : action.payload,
            sixUpPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            fiveUpPermanentlyMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,   
        };

        case CALC_SIX_CALL:  return {
            ...state,
            sixCall: state.clickCounter === 0 ? null : action.payload,
            sixCallPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0, 
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1,   
        };

        case CALC_SIX_HAND:  return {
            ...state,
            sixHand: state.clickCounter === 0 ? null : action.payload,
            sixHandPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,  
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1, 
        };

        case CALC_MAX_DOWN: 
        if(action.payload !== "alert")
        return {
            ...state,
            maxDown: state.clickCounter === 0 ? null : action.payload,
            maxDownPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            minDownPermanentlyMute: false, 
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,
        };
        if(action.payload === 'alert'){
            return{
             ...state,
             mustUseFiveDices: state.clickCounter === 0 ? null : true,
            }
        };
        break;

        case CALC_MAX_FREE: 
        if(action.payload !== "alert")
        return {
            ...state,
            maxFree: state.clickCounter === 0 ? null : action.payload,
            maxFreePermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,
        };
        if(action.payload === 'alert'){
            return{
             ...state,
             mustUseFiveDices: state.clickCounter === 0 ? null : true,
            }
        };
        break;

        case CALC_MAX_UP: 
        if(action.payload !== "alert")
        return {
            ...state,
            maxUp: state.clickCounter === 0 ? null : action.payload,
            maxUpPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            sixUpPermanentlyMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,
        };
        if(action.payload === 'alert'){
            return{
             ...state,
             mustUseFiveDices: state.clickCounter === 0 ? null : true,
            }
        };
        break;

        case CALC_MAX_CALL: 
        if(action.payload !== "alert")
        return {
            ...state,
            maxCall: state.clickCounter === 0 ? null : action.payload,
            maxCallPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1, 
        };
        if(action.payload === 'alert'){
            return{
             ...state,
             mustUseFiveDices: state.clickCounter === 0 ? null : true,
            }
        };
        break;

        case CALC_MAX_HAND: 
        if(action.payload !== "alert")
        return {
            ...state,
            maxHand: state.clickCounter === 0 ? null : action.payload,
            maxHandPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1, 
        };
        if(action.payload === 'alert'){
            return{
             ...state,
             mustUseFiveDices: state.clickCounter === 0 ? null : true,//alert window
            }
        };
        break;

        case CALC_MIN_DOWN: 
        if(action.payload !== "alert")
        return {
            ...state,
            minDown: state.clickCounter === 0 ? null : action.payload,
            minDownPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            ThreeOfAKindDownPermanentlyMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,
        };
        if(action.payload === 'alert'){
            return{
             ...state,
             mustUseFiveDices: state.clickCounter === 0 ? null : true,
            }
        };
        break;

        case CALC_MIN_FREE: 
        if(action.payload !== "alert")
        return {
            ...state,
            minFree: state.clickCounter === 0 ? null : action.payload,
            minFreePermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,
        };
        if(action.payload === 'alert'){
            return{
             ...state,
             mustUseFiveDices: state.clickCounter === 0 ? null : true,
            }
        };
        break;

        case CALC_MIN_UP: 
        if(action.payload !== "alert")
        return {
            ...state,
            minUp: state.clickCounter === 0 ? null : action.payload,
            minUpPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            maxUpPermanentlyMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,
        };
        if(action.payload === 'alert'){
            return{
             ...state,
             mustUseFiveDices: state.clickCounter === 0 ? null : true,
            }
        };
        break;

        case CALC_MIN_CALL: 
        if(action.payload !== "alert")
        return {
            ...state,
            minCall: state.clickCounter === 0 ? null : action.payload,
            minCallPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1, 
        };
        if(action.payload === 'alert'){
            return{
             ...state,
             mustUseFiveDices: state.clickCounter === 0 ? null : true,
            }
        };
        break;

        case CALC_MIN_HAND: 
        if(action.payload !== "alert")
        return {
            ...state,
            minHand: state.clickCounter === 0 ? null : action.payload,
            minHandPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1, 
        };
        if(action.payload === 'alert'){
            return{
             ...state,
             mustUseFiveDices: state.clickCounter === 0 ? null : true,
            }
        };
        break;

        case CALC_THREE_OF_A_KIND_DOWN: return {
            ...state,
            ThreeOfAKindDown: state.clickCounter === 0 ? null : action.payload,
            ThreeOfAKindDownPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            scaleDownPermanentlyMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,
 
        };

        case CALC_THREE_OF_A_KIND_FREE:  return {
            ...state,
            ThreeOfAKindFree: state.clickCounter === 0 ? null : action.payload,
            ThreeOfAKindFreePermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,   
        };

        case CALC_THREE_OF_A_KIND_UP:  return {
            ...state,
            ThreeOfAKindUp: state.clickCounter === 0 ? null : action.payload,
            ThreeOfAKindUpPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            minUpPermanentlyMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,   
        };

        case CALC_THREE_OF_A_KIND_CALL:  return {
            ...state,
            ThreeOfAKindCall: state.clickCounter === 0 ? null : action.payload,
            ThreeOfAKindCallPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0, 
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1,  
        };

        case CALC_THREE_OF_A_KIND_HAND:  return {
            ...state,
            ThreeOfAKindHand: state.clickCounter === 0 ? null : action.payload,
            ThreeOfAKindHandPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1,   
        };

        case CALC_SCALE_DOWN:
         return {
            ...state,
            scaleDown: state.clickCounter === 0 ? null : (state.clickCounter === 1 ? action.payload : (state.clickCounter === 2 && action.payload>0 ? action.payload - 10 : (state.clickCounter === 3 && action.payload>0 ? action.payload -20 : action.payload))),//different values of scale are calculated here (-0, -10, -20)
            scaleDownPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            fullDownPermanentlyMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,
 
        };
        case CALC_SCALE_FREE:
         return {
            ...state,
            scaleFree: state.clickCounter === 0 ? null : (state.clickCounter === 1 ? action.payload : (state.clickCounter === 2 && action.payload>0 ? action.payload - 10 : (state.clickCounter === 3 && action.payload>0 ? action.payload -20 : action.payload))),
            scaleFreePermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,
 
        };
        case CALC_SCALE_UP:
         return {
            ...state,
            scaleUp: state.clickCounter === 0 ? null : (state.clickCounter === 1 ? action.payload : (state.clickCounter === 2 && action.payload>0 ? action.payload - 10 : (state.clickCounter === 3 && action.payload>0 ? action.payload -20 : action.payload))),
            scaleUpPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            ThreeOfAKindUpPermanentlyMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,
 
        };
        case CALC_SCALE_CALL:
         return {
            ...state,
            scaleCall: state.clickCounter === 0 ? null : (state.clickCounter === 1 ? action.payload : (state.clickCounter === 2 && action.payload>0 ? action.payload - 10 : (state.clickCounter === 3 && action.payload>0 ? action.payload -20 : action.payload))),
            scaleCallPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1, 
 
        };
        case CALC_SCALE_HAND:
         return {
            ...state,
            scaleHand: state.clickCounter === 0 ? null : (state.clickCounter === 1 ? action.payload : (state.clickCounter === 2 && action.payload>0 ? action.payload - 10 : (state.clickCounter === 3 && action.payload>0 ? action.payload -20 : action.payload))),
            scaleHandPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1, 
 
        };

        case CALC_FULL_DOWN: return {
            ...state,
            fullDown: state.clickCounter === 0 ? null : action.payload,
            fullDownPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            pokerDownPermanentlyMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,
 
        };

        case CALC_FULL_FREE:  return {
            ...state,
            fullFree: state.clickCounter === 0 ? null : action.payload,
            fullFreePermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0, 
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1, 
        };

        case CALC_FULL_UP:  return {
            ...state,
            fullUp: state.clickCounter === 0 ? null : action.payload,
            fullUpPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            scaleUpPermanentlyMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0, 
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,  
        };

        case CALC_FULL_CALL:  return {
            ...state,
            fullCall: state.clickCounter === 0 ? null : action.payload,
            fullCallPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0, 
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1,   
        };

        case CALC_FULL_HAND:  return {
            ...state,
            fullHand: state.clickCounter === 0 ? null : action.payload,
            fullHandPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1,   
        };

        case CALC_POKER_DOWN: return {
            ...state,
            pokerDown: state.clickCounter === 0 ? null : action.payload,
            pokerDownPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            yambDownPermanentlyMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,
 
        };

        case CALC_POKER_FREE:  return {
            ...state,
            pokerFree: state.clickCounter === 0 ? null : action.payload,
            pokerFreePermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,   
        };

        case CALC_POKER_UP:  return {
            ...state,
            pokerUp: state.clickCounter === 0 ? null : action.payload,
            pokerUpPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            fullUpPermanentlyMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0, 
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,  
        };

        case CALC_POKER_CALL:  return {
            ...state,
            pokerCall: state.clickCounter === 0 ? null : action.payload,
            pokerCallPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0, 
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1,   
        };

        case CALC_POKER_HAND:  return {
            ...state,
            pokerHand: state.clickCounter === 0 ? null : action.payload,
            pokerHandPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0, 
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1,  
        };

        case CALC_YAMB_DOWN: return {
            ...state,
            yambDown: state.clickCounter === 0 ? null : action.payload,
            yambDownPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,
 
        };

        case CALC_YAMB_FREE:  return {
            ...state,
            yambFree: state.clickCounter === 0 ? null : action.payload,
            yambFreePermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0, 
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,  
        };

        case CALC_YAMB_UP:  return {
            ...state,
            yambUp: state.clickCounter === 0 ? null : action.payload,
            yambUpPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            pokerUpPermanentlyMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0, 
            numberFieldsLeftDownFreeUp: state.numberFieldsLeftDownFreeUp - 1,  
        };

        case CALC_YAMB_CALL:  return {
            ...state,
            yambCall: state.clickCounter === 0 ? null : action.payload,
            yambCallPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0, 
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1,   
        };

        case CALC_YAMB_HAND:  return {
            ...state,
            yambHand: state.clickCounter === 0 ? null : action.payload,
            yambHandPermanentlyMute: state.clickCounter === 0 ? null : true,
            throwBtnMute: false,
            dice1: '',
            dice1mute: true,
            dice2: '',
            dice2mute: true,
            dice3: '',
            dice3mute: true,
            dice4: '',
            dice4mute: true,
            dice5: '',
            dice5mute: true,
            dice6: '',
            dice6mute: true,
        
            keep1: '',
            keep1mute: true,
            keep2: '',
            keep2mute: true,
            keep3: '',
            keep3mute: true,
            keep4: '',
            keep4mute: true,
            keep5: '',
            keep5mute: true,
            keep6: '',
            keep6mute: true,
        
            clickCounter: 0,  
            numberFieldsLeftCallHand: state.numberFieldsLeftCallHand - 1, 
        };

        case CLOSE_ALERT:  return {
            ...state,
            mustUseFiveDices: false
        };

         default: return state
    }



}


//second reducer is for rules only
const rulesReducer = (state = initialState, action) => {
    switch(action.type){

        case DISPLAY_RULES: return {
            ...state,
            displayRules: !state.displayRules
        }

         default: return state
    }
}

const twoReducers = [dicesReducer, rulesReducer]

export default twoReducers